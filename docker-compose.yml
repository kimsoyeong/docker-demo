version: '3.8'

services:

  postgres_db:
    image: "postgres"
    container_name: postgres_DB
    restart: always
    networks:
      - app-tier
    volumes:
      - ./postgresql/db:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    cap_add:
      - SYS_NICE
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=1234

  flask_app:
    build:
      context: ./flask
      dockerfile: Dockerfile
    container_name: flask_app
    ports:
      - "5000:5000"    
    links:   
      - postgres_db:postgres_db            
    depends_on:
      - postgres_db
    networks:
      - app-tier
    restart: always      
    volumes:
       - ./flask/web:/app

  notebook:
    image: jupyter/all-spark-notebook
    container_name: jupyter-notebook
    labels:
      description: Intel Python using Jupyter Notebooks
      name: jupyter notebook
    ports:
      - "8888:8888"
    networks:
      - app-tier
    volumes:
      - ./notebook:/home/notebooks

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: "on-failure"
    expose:
      - 3000
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOOLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    networks:
      - app-tier

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: "on-failure"
    ports:
      - "81:81"
      - "8000:8000"
    volumes:
      - ./staticfiles:/static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - flask_app
      - frontend
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge
